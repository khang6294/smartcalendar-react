{"version":3,"sources":["components/HeaderApp.js","components/Layout.js","components/ToDoStuffs/AddToDo.js","components/ToDoStuffs/ToDoList.js","components/Calendar.js","components/Auth/Login.js","components/Auth/Register.js","components/Auth/indexAuth.js","components/Loader/Loader.js","App.js","custom-hooks.js","serviceWorker.js","index.js"],"names":["Header","Layout","headerApp","React","memo","props","react_default","a","createElement","style","background","row","type","col","xs","sm","md","lg","xl","id","className","userInfo","name","onClick","onLogout","Content","layout","components_HeaderApp","padding","children","addToDo","_useState","useState","_useState2","Object","slicedToArray","inputValue","setInputValue","onSubmit","toDos","toDoList","map","ele","toDo","indexOf","message","error","newToDo","Fragment","justify","input","value","onChange","event","target","onKeyPress","which","keyCode","es_button","onSave","success","disabled","edit","color","list","bordered","dataSource","locale","emptyText","renderItem","item","Item","completed","opacity","actions","icon","deleteItem","Meta","title","description","es_checkbox","checked","e","completeItem","onComplete","calendarSchedule","moment","Date","now","setValue","_useState3","_useState4","selectedValue","setSelectedValue","incompletedStuffs","filter","es_alert","concat","format","length","calendar","fullscreen","onSelect","dateSelected","onPanelChange","dateCellRender","listData","availDate","toDoAndDate","dateWork","valueFormat","getListData","badge","count","offset","FormItem","Form","create","email","password","values","setValues","handleChange","objectSpread","defineProperty","getFieldDecorator","form","es_form","preventDefault","validateFields","err","getLoginInfo","rules","required","prefix","placeholder","htmlType","onToggleToRegister","getSignUpInfo","Register_FormItem","href","onToggleToLogin","indexAuth","toggle","setToggle","useEffect","userCreation","renderView","Register","Login","authLoading","loader","App","_useTodos","initialValue","arguments","undefined","setToDoList","dateWorkSelected","setDateWorkSelected","_useState5","editted","_useState6","setToDoAndDate","_useState7","_useState8","setEdit","_useState9","_useState10","dateOri","setDateOri","_useState11","_useState12","setUserInfo","_useState13","_useState14","isAuth","setIsAuth","_useState15","_useState16","setAuthLoading","_useState17","_useState18","setUserCreation","token","localStorage","getItem","expiryDate","logout","userId","remainingMilliseconds","getTime","autoLogout","fetchAllWorks","query","axios","post","headers","Authorization","then","res","toDoAndDateFormat","data","works","work","catch","console","log","removeItem","milliseconds","setTimeout","login","loginInfo","loginQuery","setItem","toISOString","response","errors","signup","signupQuery","toDoAndDateClone","toConsumableArray","i","push","removeToDo","j","toDoListClone","splice","selectDate","date","completeToDo","updateWork","graphQlToDoList","JSON","stringify","replace","useTodos","loading","setLoading","Loader_Loader","components_Auth_indexAuth","Calendar","ToDoStuffs_AddToDo","ToDoStuffs_ToDoList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62b6d936.chunk.js","sourcesContent":["import React from 'react';\nimport { Layout,Col,Row } from 'antd';\nimport './HeaderApp.css'\n\nconst { Header } = Layout;\n\n\nconst headerApp = React.memo((props) => {\n    return (\n        <Header style={{background:'#0b66bd'}}>\n            <Row type=\"flex\">\n                <Col xs={10} sm={12} md={15} lg={18} xl={18}>\n                    <div id = \"logo\">\n                        SmartCalendar\n                    </div>\n                </Col>\n                <Col xs={7} sm={6} md={4} lg={3} xl={3}>\n                    <div \n                        id=\"menu-list\"\n                    >\n                        <div \n                            className=\"menu-item-name\"\n                        >\n                            Hi, {props.userInfo.name}\n                        </div>\n                    </div>\n                </Col>\n                <Col xs={7} sm={6} md={4} lg={3} xl={3}>\n                    <div \n                        id=\"menu-list\"\n                    >\n                        <div \n                            className=\"menu-item-logout\"\n                            onClick = {() => props.onLogout()}\n                        >\n                            Logout\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        </Header>\n    )\n})\n\nexport default headerApp;","import React from 'react';\nimport { Layout } from 'antd';\nimport HeaderApp from './HeaderApp'\nconst { Content } = Layout;\n\n\nconst layout = React.memo((props) => {\n    return (\n        <Layout className=\"layout\">\n            <HeaderApp userInfo = {props.userInfo} onLogout = {() => props.onLogout()}/>\n            <Content>\n                <div style={{ background: '#fff', padding: 50 }}>\n                    {props.children}\n                </div>\n            </Content>\n        </Layout>\n    )\n})\n\n\nexport default layout","import React,{useState} from 'react';\nimport {Input,Button,Row,message} from 'antd';\nimport './AddToDo.css'\n\n\nconst addToDo = React.memo((props) => {\n    const [inputValue,setInputValue] = useState('');\n\n    const onInputChange = (event) => {\n        setInputValue(event.target.value)\n    }\n\n    const clearInput = () => {\n        setInputValue('')\n    }\n\n    const onSubmit = () => {\n        const toDos = props.toDoList.map(ele => ele.toDo)\n        if(inputValue !== ''){\n            if(toDos.indexOf(inputValue) >= 0){\n                message.error('You already have this stuff to do!');\n                return null;\n            } else {\n                props.newToDo(inputValue);\n                clearInput()\n            }\n        } else return null\n    }\n\n    const onSave = () => {\n        props.onSave()\n        message.success(\"SAVED!\",1)\n    }\n\n    return (\n        <>\n            <Row type=\"flex\" justify=\"start\">\n                <Input\n                    className=\"addToDo-field\" \n                    value={inputValue} \n                    onChange ={onInputChange}\n                    onKeyPress = {(event) => {\n                        if (event.which === 13 || event.keyCode === 13) {\n                            onSubmit()\n                        }\n                    }}\n                />\n                <Button\n                    onClick = {onSubmit}\n                >\n                    Add\n                </Button>\n                <Button \n                    onClick = {onSave}\n                    disabled = {!props.edit}\n                >\n                    Save\n                </Button>\n\n            </Row>\n            <br/>\n            <Row type=\"flex\" justify=\"start\">\n                {props.edit ? <p style={{color:'red'}}>Please click SAVE button for new changes</p>: null}\n            </Row>\n        </>\n    )\n})\n\nexport default addToDo\n","import React from 'react';\nimport {List,Icon,Checkbox} from 'antd'\nimport './ToDoList.css'\nconst toDoList = (props) => {\n    const onComplete = (e,item) =>{\n        props.completeItem({\n            toDo: item.toDo,\n            completed: e.target.checked\n        })\n    }\n \n    return(\n        <>\n        <List\n            className = \"todo-list\"\n            bordered\n            dataSource={props.toDoList}\n            locale = {{\n                emptyText:'You have nothing to do!'\n            }}\n            renderItem= {item => (\n                <div>\n                <List.Item \n                    style ={ item.completed ? {opacity: 0.3} : {}}\n                    actions={[\n                        <Icon type=\"delete\" onClick={() => props.deleteItem(item.toDo)}/>\n                    ]}>\n                    <List.Item.Meta\n                        title={item.toDo}\n                        description={\n                            <Checkbox \n                                checked = {item.completed}\n                                onChange={(event) => onComplete(event,item)}\n                            >\n                                Complete\n                            </Checkbox>\n                        }\n                    />\n                </List.Item> \n                </div>\n            )}\n        />\n        </>\n    )\n}\n\nexport default toDoList","import React,{useState} from 'react'\nimport { Calendar, Alert, Badge } from 'antd';\nimport moment from 'moment';\n\nconst calendarSchedule = React.memo((props) => {\n    //console.log(props.toDoAndDate)\n    function getListData(value) {\n        const availDate = props.toDoAndDate.map(ele => ele.dateWork)\n        //console.log(availDate)\n        const valueFormat = moment(value).format('YYYY-MM-DD')\n        let listData = [];\n        if(availDate.indexOf(valueFormat) > -1){\n            listData = props.toDoAndDate[availDate.indexOf(valueFormat)].toDoList.filter(toDo => toDo.completed === false)\n            // console.log(listData)\n            \n        }\n        return listData\n    }\n        \n    function dateCellRender(value) {\n        const listData = getListData(value);\n        return (\n            <Badge count={listData.length} offset = {[18,-20]}/>\n        )\n    }\n    const [value,setValue] = useState(moment(Date.now()));\n    const [selectedValue, setSelectedValue] = useState(moment(Date.now()));\n    const onSelect = (value) => {\n        setValue(value)\n        setSelectedValue(value)\n        props.dateSelected(value.format('YYYY-MM-DD'))\n    }\n    \n    const onPanelChange = (value) => {\n        setValue(value)\n    }\n\n    const incompletedStuffs = props.toDoList.filter(toDo => toDo.completed === false)\n    \n    return(\n        <div>\n            <Alert \n                message={`You selected date: ${selectedValue && selectedValue.format('YYYY-MM-DD')}`} \n            />\n            <br/>\n            <Alert \n                message={`You have ${incompletedStuffs.length <= 1 ? `${incompletedStuffs.length} stuff`: `${incompletedStuffs.length} stuffs`}  to do`} \n            />\n            <Calendar \n                fullscreen={false} \n                value={value} \n                onSelect={onSelect} \n                onPanelChange={onPanelChange} \n                dateCellRender={dateCellRender}\n            />\n        </div>    \n    )\n})\n\n\n\nexport default calendarSchedule","import React, { useState } from \"react\";\nimport { Form, Icon, Input, Button } from \"antd\";\n\nconst FormItem = Form.Item;\nconst login = (props) => {\n\tconst [values, setValues] = useState({ email: \"\", password: \"\" });\n\n\tconst handleChange = (name, value) => {\n\t\tsetValues({ ...values, [name]: value });\n\t};\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\t\tprops.form.validateFields((err, values) => {\n\t\t\tif (!err) {\n\t\t\t\tprops.getLoginInfo(values)\n\t\t\t}\n\t\t});\n\t};\n\n\tconst onToggleToRegister = () => {\n\t\tprops.onToggleToRegister()\n\t}\n\n\tconst { getFieldDecorator } = props.form;\n\treturn (\n\t\t<>\n\t\t\t<div className=\"auth-background\" />\n\t\t\t<div className=\"logo\">\n\t\t\t\tSmart Calendar\n\t\t\t</div>\n\t\t\t<Form onSubmit={handleSubmit} className=\"login-form\">\n\t\t\t\t<h1 className=\"welcome\">Login</h1>\n\t\t\t\t<FormItem className=\"login-field\">\n\t\t\t\t\t<h5 className=\"login-field-name\">EMAIL</h5>\n\t\t\t\t\t{getFieldDecorator('email', {\n\t\t\t\t\t\trules: [{\n\t\t\t\t\t\t\ttype: 'email', message: 'The input is not valid E-mail!',\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\trequired: true, message: 'Please input your E-mail!',\n\t\t\t\t\t\t}],\n\t\t\t\t\t})(\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tclassName=\"login-input\"\n\t\t\t\t\t\t\tprefix={\n\t\t\t\t\t\t\t\t<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</FormItem>\n\t\t\t\t<FormItem className=\"login-field\">\n\t\t\t\t\t<h5 className=\"login-field-name\">PASSWORD</h5>\n\t\t\t\t\t{getFieldDecorator(\"password\", {\n\t\t\t\t\t\trules: [\n\t\t\t\t\t\t{ required: true, message: \"Please input your password!\" }\n\t\t\t\t\t\t]\n\t\t\t\t\t})(\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\tclassName=\"login-input\"\n\t\t\t\t\t\tprefix={\n\t\t\t\t\t\t\t<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</FormItem>\n\t\t\t\t<FormItem className=\"login-btn\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\thtmlType=\"submit\"\n\t\t\t\t\t\tclassName=\"login-form-button\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Button>\n\t\t\t\t</FormItem>\n\t\t\t\t<div className=\"register\">\n\t\t\t\tNeed an account?{\" \"}\n\t\t\t\t<div className=\"login-link\" onClick={onToggleToRegister}>\n\t\t\t\t\tRegister\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Form>\n\t\t</>\n\t);\n}\n\nexport default Form.create()(login);","import React, { useState } from \"react\";\nimport { Form, Input, Button, Icon } from \"antd\";\n\nconst FormItem = Form.Item;\n\n\nconst register = (props) => {\n    const [values, setValues] = useState({ name: \"\", email: \"\", password: \"\" });\n\n\tconst handleChange = (name, value) => {\n\t\tsetValues({ ...values, [name]: value });\n    };\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\t\tprops.form.validateFields((err, values) => {\n\t\t\tif (!err) {\n\t\t\t\tprops.getSignUpInfo(values)\n\t\t\t}\n\t\t});\n    };\n    \n    const onToggleToLogin = () => {\n        props.onToggleToLogin()\n    }\n    const { getFieldDecorator } = props.form;\n    return (\n        <>\n        <div className=\"auth-background\" />\n        <div className=\"logo\">\n            Smart Calendar\n        </div>\n        <Form onSubmit={handleSubmit} className=\"register-form\">\n            <h1 className=\"welcome\">Register</h1>\n            <FormItem className=\"login-field\">\n            <h5 className=\"login-field-name\">FULL NAME</h5>\n            {getFieldDecorator(\"name\", {\n                rules: [\n                    { required: true, message: \"Please input your full name!\" }\n                ]\n            })(\n                <Input\n                className=\"login-input\"\n                prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                placeholder=\"Full name\"\n                onChange={handleChange}\n                />\n            )}\n            </FormItem>\n            <FormItem className=\"login-field\">\n            <h5 className=\"login-field-name\">EMAIL</h5>\n            {getFieldDecorator('email', {\n                rules: [{\n                    type: 'email', message: 'The input is not valid E-mail!',\n                }, {\n                    required: true, message: 'Please input your E-mail!',\n                }],\n            })(\n                <Input\n                type=\"email\"\n                className=\"login-input\"\n                prefix={\n                    <Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                placeholder=\"example@example.com\"\n                onChange={handleChange}\n                />\n            )}\n            </FormItem>\n            <FormItem className=\"login-field\">\n            <h5 className=\"login-field-name\">PASSWORD</h5>\n            {getFieldDecorator(\"password\", {\n                rules: [\n                    { required: true, message: \"Please input your password!\" },\n                ]\n            })(\n                <Input\n                className=\"login-input\"\n                prefix={\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={handleChange}\n                />\n            )}\n            </FormItem>\n            <FormItem className=\"login-btn\">\n            <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n            >\n                Sign me up\n            </Button>\n            </FormItem>\n            <div className=\"register\">\n                Had an account already?{\" \"}\n                <div className=\"login-link\" href onClick = {onToggleToLogin}>\n                    Login\n                </div>\n            </div>\n        </Form>\n        </>\n    );\n}\n\nexport default Form.create()(register);","import React, {useState,useEffect} from 'react'\nimport Login from './Login'\nimport Register from './Register'\nimport \"./indexAuth.css\";\n\nconst indexAuth = (props) => {\n    const [toggle, setToggle] = useState(false);\n\n    useEffect(() => {\n        if(props.userCreation){\n            setToggle(false)\n        }\n    },[props.userCreation])\n\n    const onToggleToRegister = () => {\n        setToggle(true)\n    }\n    const onToggleToLogin = () => {\n        setToggle(false)\n    }\n\n    let renderView = null;\n\n    if(!toggle){\n        renderView = \n        <Login \n            onToggleToRegister = {onToggleToRegister} \n            getLoginInfo = {(values) => props.getLoginInfo(values)}\n        />\n    } else {\n        renderView =\n        <Register\n            onToggleToLogin = {onToggleToLogin}\n            getSignUpInfo = {(values) => props.getSignUpInfo(values)}\n        />\n    }\n    return (\n        <div className={props.authLoading ? \"auth-container\" : null}>\n            {renderView}\n        </div>\n    )\n}\n\nexport default indexAuth","import React from 'react';\n\nimport './Loader.css';\n\nconst loader = props => (\n  <div className=\"loader\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default loader;","import React, { useState,useEffect } from 'react';\nimport './App.css';\nimport Layout from './components/Layout'\nimport AddToDo from './components/ToDoStuffs/AddToDo'\nimport ToDoList from './components/ToDoStuffs/ToDoList'\nimport CalendarSchedule from './components/Calendar'\nimport 'antd/dist/antd.css';\nimport {useTodos} from './custom-hooks'\nimport IndexAuth from './components/Auth/indexAuth'\nimport Loader from './components/Loader/Loader'\n\n\nconst App = (props) => {\n\n    const { toDoAndDate,\n            userInfo,\n            authLoading,\n            toDoList,\n            isAuth,\n            userCreation,\n            signup,\n            login, \n            logout,\n            edit, \n            addToDo, \n            removeToDo, \n            selectDate ,\n            completeToDo,\n            onSave\n        } = useTodos();\n    \n    \n    let renderView = null;\n    const [loading,setLoading] = useState(false)\n\n\n    useEffect(() => {\n        setLoading(true)\n    },[loading])\n\n    if(!isAuth && authLoading){\n        renderView = (\n            <>\n                <Loader/>\n                <IndexAuth \n                    getLoginInfo = {(userInfo) => login(userInfo)}\n                    getSignUpInfo = {(userInfo) => signup(userInfo)}\n                    userCreation = {userCreation}\n                    authLoading = {authLoading}\n                />\n            </>\n        )\n        \n    }\n\n    if(isAuth){\n        renderView = (\n            <Layout userInfo= {userInfo} onLogout = {logout}>\n                <CalendarSchedule\n                    toDoAndDate = {toDoAndDate}\n                    dateSelected = {(date) => selectDate(date)}\n                    toDoList = {toDoList}\n                />\n                <AddToDo\n                    newToDo = {(newToDo) => addToDo(newToDo)} \n                    toDoList = {toDoList}\n                    onSave = {onSave}\n                    edit = {edit}\n                />\n                <ToDoList\n                    toDoList = {toDoList}\n                    deleteItem = {item => removeToDo(item)}\n                    completeItem = {item => completeToDo(item)}\n                />\n            </Layout>\n        )\n    } else if(!isAuth && loading && !authLoading) {\n        renderView = <IndexAuth \n            getLoginInfo = {(userInfo) => login(userInfo)}\n            getSignUpInfo = {(userInfo) => signup(userInfo)}\n            userCreation = {userCreation}\n            authLoading = {authLoading}\n        />\n    } \n    \n    return (\n        <div className=\"App\">\n            {renderView}\n        </div>\n    );\n}\n\nexport default App;\n","import {useState, useEffect} from 'react'\nimport moment from 'moment'\nimport axios from 'axios'\nimport {message} from 'antd'\nexport const useTodos = (initialValue = {dateWork:moment(Date.now()).format('YYYY-MM-DD'),toDoList: []}) => {\n    const [toDoList, setToDoList] = useState(initialValue.toDoList);\n    const [dateWorkSelected, setDateWorkSelected] = useState(initialValue.dateWork)\n    const [toDoAndDate, setToDoAndDate] = useState([{\n        dateWork: dateWorkSelected,\n        toDoList: toDoList,\n        editted:false\n    }])\n    const [edit, setEdit] = useState(false)\n    const [dateOri, setDateOri] = useState([])\n    const [userInfo, setUserInfo] = useState({})\n    const [isAuth, setIsAuth] = useState(false)\n    const [authLoading, setAuthLoading] = useState(false)\n    const [userCreation, setUserCreation] = useState(false)\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        const expiryDate = localStorage.getItem('expiryDate');\n        if (!token || !expiryDate) {\n            return;\n        }\n        if (new Date(expiryDate) <= new Date()) {\n            logout();\n            return;\n        }\n        const userId = localStorage.getItem('userId');\n        const name = localStorage.getItem('name')\n        const remainingMilliseconds = new Date(expiryDate).getTime() - new Date().getTime();\n        setIsAuth(true)\n        setUserInfo({\n            token:token,\n            userId: userId,\n            name: name\n        })\n        autoLogout(remainingMilliseconds);\n    },[isAuth])\n\n    useEffect(() => {\n        if(isAuth){\n            const fetchAllWorks = {\n                query:`\n                    {\n                        works(creator:\"${userInfo.userId}\"){\n                            dateWork\n                            toDoList{\n                                toDo\n                                completed\n                            }\n                        }\n                    }\n                `\n            } \n            axios.post('http://localhost:8080/graphql',fetchAllWorks,{\n                headers: {\n                  Authorization: 'Bearer ' + userInfo.token\n                }\n              })\n                .then(res => {\n                    const toDoAndDateFormat = res.data.data.works.map(work => {\n                        return {\n                            ...work,\n                            editted: false\n                        }\n                    })\n                    setToDoAndDate(toDoAndDateFormat)\n                    setToDoList(toDoAndDateFormat.filter(ele => ele.dateWork === dateWorkSelected)[0].toDoList)\n                    const dateOri = res.data.data.works.map(work => work.dateWork)\n                    setDateOri(dateOri)\n                })\n                .catch(err => console.log(err))\n        }\n    },[isAuth])\n\n    const addToDo = (newToDo) => {\n        let toDoAndDateClone = [...toDoAndDate]\n        for(let i = 0; i < toDoAndDateClone.length; i++){\n            if(dateWorkSelected === toDoAndDateClone[i].dateWork){\n                toDoAndDateClone[i].toDoList.push({\n                    toDo: newToDo,\n                    completed: false\n                })\n                setToDoAndDate(toDoAndDateClone)\n                setToDoList(toDoAndDateClone[i].toDoList)\n                toDoAndDateClone[i].editted = true\n                setEdit(toDoAndDateClone[i].editted)\n            }\n        }\n        \n    }\n\n    const selectDate = (date) => {\n        setDateWorkSelected(date)\n        let toDoAndDateClone = [...toDoAndDate]\n        let dateAvail = toDoAndDate.map(ele => ele.dateWork)\n        if(dateAvail.indexOf(date) < 0){\n            toDoAndDateClone.push({\n                dateWork: date,\n                toDoList: []\n            })\n            setToDoAndDate(toDoAndDateClone)\n            setToDoList([])\n        }\n        for(let i = 0; i< toDoAndDate.length; i++){\n            if(date === toDoAndDate[i].dateWork){\n                setToDoList(toDoAndDate[i].toDoList)\n                setEdit(toDoAndDate[i].editted)\n            }\n        }\n    }\n\n    const removeToDo = (toDo) => {\n        let toDoAndDateClone = [...toDoAndDate]\n        for(let j = 0; j < toDoAndDateClone.length; j++){\n            if(dateWorkSelected === toDoAndDateClone[j].dateWork){\n                let toDoListClone = [...toDoAndDateClone[j].toDoList]\n                for(let i = 0 ; i< toDoListClone.length; i++){\n                    if(toDo === toDoListClone[i].toDo){\n                        toDoListClone.splice(i,1)\n                    }\n                }\n                toDoAndDateClone[j].toDoList = [...toDoListClone]\n                setToDoList(toDoListClone)\n                toDoAndDateClone[j].editted = true\n                setEdit(toDoAndDateClone[j].editted)\n            }\n        }\n        setToDoAndDate(toDoAndDateClone) \n    }\n\n    const completeToDo = (item) => {\n        let toDoAndDateClone = [...toDoAndDate]\n        for(let j = 0; j < toDoAndDateClone.length; j++){\n            if(dateWorkSelected === toDoAndDateClone[j].dateWork){\n                let toDoListClone = [...toDoAndDateClone[j].toDoList]\n                for(let i = 0 ; i< toDoListClone.length; i++){\n                    if(item.toDo === toDoListClone[i].toDo){\n                        toDoListClone[i] = {...item}\n                    }\n                }\n                toDoAndDateClone[j].toDoList = [...toDoListClone]\n                toDoAndDateClone[j].editted = true\n                setToDoList(toDoListClone)\n                setEdit(toDoAndDateClone[j].editted)\n            }\n        }\n        setToDoAndDate(toDoAndDateClone) \n    }\n\n    const onSave = () => {\n        const toDoListJSON = JSON.stringify(toDoList);\n        const graphQlToDoList = toDoListJSON.replace(/\"([^(\")\"]+)\":/g,\"$1:\");\n        let updateWork;\n        if(dateOri.indexOf(dateWorkSelected) > -1){\n            updateWork = {\n                query:`\n                mutation {\n                    updateWork(dateWork:\"${dateWorkSelected}\", workInput:{\n                          dateWork:\"${dateWorkSelected}\",\n                          toDoList: ${graphQlToDoList}\n                        }){\n                      dateWork\n                      toDoList{\n                        toDo\n                        completed\n                      }\n                    }\n                  }\n                `\n            }\n        } else {\n            updateWork = {\n                query:`\n                mutation {\n                    createWork(workInput:{\n                          dateWork:\"${dateWorkSelected}\",\n                          toDoList:${graphQlToDoList} \n                        }){\n                        dateWork\n                        toDoList{\n                            toDo\n                            completed\n                      }\n                    }\n                  }\n                `\n            }\n        }\n        \n        axios.post('http://localhost:8080/graphql',updateWork,{\n            headers: {\n              Authorization: 'Bearer ' + userInfo.token\n            }\n          })\n            .then(res => {\n                toDoAndDate.filter(ele => ele.dateWork === dateWorkSelected)[0].editted = false\n                setEdit(toDoAndDate.filter(ele => ele.dateWork === dateWorkSelected)[0].editted)\n            })\n            .catch(err => console.log(err.response.data))\n\n    }\n\n    const login = (loginInfo) => {\n        const loginQuery = {\n            query:`\n                {\n                    login(email:\"${loginInfo.email}\",password:\"${loginInfo.password}\"){\n                        token\n                        userId\n                        name\n                    }\n                  }\n            `\n        }\n        setAuthLoading(true)\n        axios.post('http://localhost:8080/graphql',loginQuery)\n            .then(res => {\n                setUserInfo(res.data.data.login)\n                setIsAuth(true)\n                setAuthLoading(false)\n                localStorage.setItem('token', res.data.data.login.token);\n                localStorage.setItem('userId', res.data.data.login.userId);\n                localStorage.setItem('name', res.data.data.login.name);\n                const remainingMilliseconds = 60 * 60 * 1000;\n                const expiryDate = new Date(\n                    new Date().getTime() + remainingMilliseconds\n                );\n                localStorage.setItem('expiryDate', expiryDate.toISOString());\n                autoLogout(remainingMilliseconds)\n            })\n            .catch(err => {\n                setAuthLoading(false)\n                message.error(err.response.data.errors[0].message);\n            });\n    }\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('expiryDate');\n        localStorage.removeItem('userId');\n        setUserInfo({})\n        setIsAuth(false)\n    }\n\n    const autoLogout = milliseconds => {\n        setTimeout(() => {\n            logout();\n        }, milliseconds);\n    };\n\n    const signup = (userInfo) => {\n        const signupQuery = {\n            query: `\n            mutation{\n                createUser(userInput:{email:\"${userInfo.email}\",name:\"${userInfo.name}\",password:\"${userInfo.password}\"}){\n                  email\n                  _id\n                }\n              }\n              \n            `\n        }\n        axios.post('http://localhost:8080/graphql',signupQuery)\n            .then(res => {\n                setUserCreation(true)\n                message.success(\"Create user successfully\");\n            })\n            .catch(err => message.error(err.response.data.errors[0].message))\n    }\n  \n    return {\n        userInfo: userInfo,\n        userCreation: userCreation,\n        isAuth:isAuth,\n        login: login,\n        logout:logout,\n        signup: signup,\n        authLoading: authLoading,\n        toDoAndDate: toDoAndDate,\n        toDoList: toDoList,\n        addToDo: addToDo,\n        removeToDo: removeToDo,\n        selectDate: selectDate,\n        completeToDo: completeToDo,\n        onSave: onSave,\n        edit: edit\n    }\n};\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}